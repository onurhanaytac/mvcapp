@model IEnumerable<WebApplication1.Models.Country>

@{
    ViewBag.Title = "Index";
}

<div id="country-map" style="margin-top: 20px;"></div>
<div id="country-grid" style="margin-top: 20px;"></div>

<script>
    $(document).ready(() => {
        /**
         * Create app
         */
        //createInitialData((err, result) => {
        //    if (err) {
        //        return console.log(err);
        //    }
        //    createMap();
        //    createGrid();
        //});

        createMap();
        createGrid();
    });

    function createMap() {
        var map = AmCharts.makeChart("country-map", {
            "type": "map",
            "theme": "light",
            "projection": "eckert3",
            "dataProvider": {
                "map": "worldLow",
                "getAreasFromMap": true
            },
            "areasSettings": {
                "selectedColor": "#CC0000",
                "selectable": true
            },
            /**
             * Add click event to track country selection/unselection
             */
            "listeners": [{
                "event": "clickMapObject",
                "method": function (e) {

                    // Ignore any click not on area
                    if (e.mapObject.objectType !== "MapArea")
                        return;

                    var area = e.mapObject;

                    // Toggle showAsSelected
                    area.showAsSelected = !area.showAsSelected;
                    e.chart.returnInitialColor(area);

                    // Update the list
                    var filters = getSelectedCountries();
                    var grid = $("#country-grid").data("kendoGrid");
                    var dataSource = grid.dataSource;

                    dataSource.filter({
                        // leave data items which are "Food" or "Tea"
                        logic: "or",
                        filters: filters
                    });
                }
            }]
        });

        /**
         * Function which extracts currently selected country list.
         * Returns array consisting of country ISO2 codes
         */
        function getSelectedCountries() {
            var selected = [];
            for (var i = 0; i < map.dataProvider.areas.length; i++) {
                if (map.dataProvider.areas[i].showAsSelected)
                    selected.push({ field: "Code", operator: "startswith", value: map.dataProvider.areas[i].id });
            }
            return selected;
        }
    }

    function createGrid() {

        var dataSource = new kendo.data.DataSource({
            pageSize: 10,
            transport: {
                read: {
                    url: '@Url.Action("GetCountries", "Countries")',
                    dataType: "json",
                    type: "get"
                }
            },
            change: e => {
                if (e.action === "itemchange") {
                    ajaxPostAsync("UpdateCountry", e.items[0], (err, result) => {
                        if (err) {
                            return console.log(err);
                        }
                        $("#country-grid").data("kendoGrid").refresh();
                    });
                } else if (e.action === "remove") {
                    var dataItem = e.items[0];
                    ajaxPostAsync("DeleteCountry", {ID: dataItem.ID}, (err, result) => {
                        if (err) {
                            $("#country-grid").data("kendoGrid").read();
                            return console.log(err);
                        }
                    });
                }
            }
        });

        $("#country-grid").kendoGrid({
            height: 400,
            selectable: "multiple cell",
            editable: {
                mode: "incell",
                confirmation: false
            },
            allowCopy: true,
            pageable: true,
            sortable: true,
            confirmation: "Are you sure?",
            columns: [
                {
                    field: "Flag",
                    template: `<img src="../../Content/flags/#:Flag#" height="64" width="128">`,
                    width: 140
                },
                { field: "FullName" },
                { field: "CapitalCity" },
                {
                    field: "Population",
                    format: "{0:n0}",
                },
                {
                    command: [
                        { name: "destroy", text: " ", className: "command-icon-btn" }
                    ],
                    width: 40
                }
            ],
            dataSource: dataSource
        });

        $("#country-grid tbody").on("mouseenter", "tr", function (e) {
            $(".k-button", e.currentTarget).addClass("showme");
        });

        $("#country-grid tbody").on("mouseleave", "tr", function (e) {
            $(".k-button", e.currentTarget).removeClass("showme");
        });
    }

    function createInitialData(callback) {
        var data = createCountryInformation();

        ajaxPostAsync("CreateInitialData", data, (err, result) => {
            if (err) {
                return callback(err);
            }
            callback(null, result);
        });
    }

    function ajaxPostAsync(methodName, params, callback) {
        $.ajax({
            url: '@Url.Action("strMethodName", "Countries")'.replace("strMethodName", methodName),
            type: "POST",
            data: JSON.stringify(params),
            dataType: "json",
            traditional: true,
            contentType: "application/json; charset=utf-8",
            success: success => {
                callback(null, success);
            },
            error: error => {
                callback(error);
            }
        });
    }

    function createCountryInformation() {
        var _countries = [];

        countries.forEach(country => {
            var _country = {};
            _country["Name"] = country.name;
            _country["FullName"] = country.nativeName;
            _country["Code"] = country.alpha2Code;
            _country["Currency"] = country.currencies[0].name + " (" + country.currencies[0].symbol + ")";
            _country["Flag"] = country.alpha2Code + "-128.png";
            _country["Language"] = country.languages[0].name;
            _country["CapitalCity"] = country.capital;
            _country["Population"] = country.population;
            _country["Region"] = country.region;

            _countries.push(_country);
        });

        return _countries;
    }
    function showHideCommandButtons(row) {
        var tree = $("#country-grid").data("kendoGrid");
        var tableRows = tree.tbody.find('tr');

        var buttonsToHide = ["movedown", "moveup", "edit", "destroy"];

        _.each(buttonsToHide, button => {
            $(tableRows[0]).find(`[data-command='` + button + `']`).removeClass("showme");
        });
    }

</script>